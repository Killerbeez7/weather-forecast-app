# Generated by Django 5.2.6 on 2025-09-06 18:54

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('country', models.CharField(max_length=100)),
                ('country_code', models.CharField(max_length=10)),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Cities',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='WeatherRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('request_type', models.CharField(choices=[('random', 'Random Cities'), ('city', 'Specific City'), ('status', 'Status Check')], max_length=20)),
                ('city_name', models.CharField(blank=True, max_length=100, null=True)),
                ('success', models.BooleanField()),
                ('response_time', models.FloatField(blank=True, null=True)),
                ('error_message', models.TextField(blank=True, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='WeatherStatistics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('coldest_city', models.CharField(max_length=100)),
                ('coldest_temperature', models.FloatField()),
                ('average_temperature', models.FloatField()),
                ('total_cities', models.IntegerField()),
                ('calculation_timestamp', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name_plural': 'Weather Statistics',
                'ordering': ['-calculation_timestamp'],
            },
        ),
        migrations.CreateModel(
            name='WeatherData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('temperature', models.FloatField()),
                ('feels_like', models.FloatField()),
                ('humidity', models.IntegerField()),
                ('pressure', models.IntegerField()),
                ('wind_speed', models.FloatField()),
                ('wind_direction', models.IntegerField(blank=True, null=True)),
                ('visibility', models.IntegerField(blank=True, null=True)),
                ('weather_main', models.CharField(max_length=50)),
                ('weather_description', models.CharField(max_length=100)),
                ('weather_icon', models.CharField(blank=True, max_length=10, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='weather_data', to='weather_app.city')),
            ],
            options={
                'verbose_name_plural': 'Weather Data',
                'ordering': ['-timestamp'],
            },
        ),
    ]
